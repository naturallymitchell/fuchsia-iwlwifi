# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/test/test_package.gni")

# Compile flags
testing_defines = [
  "CONFIG_TEST_SIM=1",
  "CPTCFG_IWLMVM=1",
]

# Simulated transportation layer -- for unittest code.
source_set("iwlwifi_sim_trans_ss") {
  defines = testing_defines
  testonly = true

  sources = [
    "sim-default-nvm.cc",
    "sim-mvm.cc",
    "sim-nvm.cc",
    "trans-sim.cc",
  ]

  deps = [
    "//garnet/lib/wlan/protocol",
    "//sdk/banjo/fuchsia.hardware.pci",
    "//sdk/banjo/fuchsia.hardware.wlanphyimpl",
    "//src/devices/lib/driver",
    "//src/devices/pci/testing:pci-protocol-fake",
    "//src/devices/testing/fake_ddk",
    "//src/lib/ddk",
  ]

  public_deps = [
    "//src/connectivity/wlan/drivers/testing/lib/sim-env",
    "//src/connectivity/wlan/drivers/testing/lib/sim-fake-ap",
    "//src/connectivity/wlan/drivers/third_party/intel/iwlwifi:core",
  ]
}

group("test") {
  testonly = true
  deps = [ ":iwlwifi_test" ]
}

# Definition for simulated transportation layer + gtest
testing_deps = [
  ":iwlwifi_sim_trans_ss",
  "//src/devices/testing/fake-bti",
  "//src/devices/testing/fake_ddk",
  "//zircon/public/lib/mock-function",
  "//zircon/public/lib/zircon-internal",
  "//zircon/public/lib/zxtest",
]

# The dummy code for developer to start a new test.
executable("dummy_test") {
  output_name = "dummy_test"
  testonly = true

  sources = [ "dummy_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("fuchsia_porting_test") {
  output_name = "fuchsia_porting_test"
  testonly = true

  sources = [ "fuchsia_porting_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("iwl-phy-db_test") {
  output_name = "iwl-phy-db_test"
  testonly = true

  sources = [ "iwl-phy-db_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("mac80211_test") {
  output_name = "mac80211_test"
  testonly = true

  sources = [ "mac80211_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("mac-ctxt_test") {
  output_name = "mac-ctxt_test"
  testonly = true

  sources = [ "mac-ctxt_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

# Test code for MVM features.
executable("mvm_test") {
  output_name = "mvm_test"
  testonly = true

  sources = [ "mvm_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("notif-wait_test") {
  output_name = "notif-wait_test"
  testonly = true

  sources = [ "notif-wait_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("nvm_test") {
  output_name = "nvm_test"
  testonly = true

  sources = [ "nvm_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("pcie_test") {
  output_name = "pcie_test"
  testonly = true

  sources = [ "pcie_test.cc" ]

  defines = testing_defines
  deps = testing_deps
  deps += [
    "//garnet/lib/wlan/protocol:protocol",
    "//src/connectivity/wlan/drivers/third_party/intel/iwlwifi:core",
    "//src/connectivity/wlan/drivers/third_party/intel/iwlwifi:pcie",
    "//zircon/system/ulib/async-loop",
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]
}

executable("phy-ctxt_test") {
  output_name = "phy-ctxt_test"
  testonly = true

  sources = [ "phy-ctxt_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("sta_test") {
  output_name = "sta_test"
  testonly = true

  sources = [ "sta_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("utils_test") {
  output_name = "utils_test"
  testonly = true

  sources = [ "utils_test.cc" ]

  defines = testing_defines
  deps = testing_deps
}

executable("wlan-device_test") {
  output_name = "wlan-device_test"
  testonly = true

  sources = [ "wlan-device_test.cc" ]

  defines = testing_defines
  deps = testing_deps
  deps += [ "//src/connectivity/wlan/drivers/third_party/intel/iwlwifi:pcie" ]
}

unittest_package("iwlwifi_test") {
  package_name = "iwlwifi_test"

  deps = [
    ":dummy_test",
    ":fuchsia_porting_test",
    ":iwl-phy-db_test",
    ":mac-ctxt_test",
    ":mac80211_test",
    ":mvm_test",
    ":notif-wait_test",
    ":nvm_test",
    ":pcie_test",
    ":phy-ctxt_test",
    ":sta_test",
    ":utils_test",
    ":wlan-device_test",
  ]

  tests = [
    {
      name = "dummy_test"
    },
    {
      name = "fuchsia_porting_test"
    },
    {
      name = "iwl-phy-db_test"
    },
    {
      name = "mac80211_test"
    },
    {
      name = "mac-ctxt_test"
    },
    {
      name = "mvm_test"
    },
    {
      name = "notif-wait_test"
    },
    {
      name = "nvm_test"
    },
    {
      name = "pcie_test"
    },
    {
      name = "phy-ctxt_test"
    },
    {
      name = "sta_test"
    },
    {
      name = "utils_test"
    },
    {
      name = "wlan-device_test"
    },
  ]
}
