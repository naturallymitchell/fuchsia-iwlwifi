# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

# Simulated transportation layer -- for unittest code.
source_set("iwlwifi_sim_trans_ss") {
  defines = [ "CONFIG_TEST_SIM=1" ]

  deps = [
    "//src/connectivity/wlan/drivers/third_party/intel/iwlwifi:core",
  ]

  public_deps = [
    "//src/connectivity/wlan/drivers/testing/lib/sim-device:sim-device",
    "//src/connectivity/wlan/drivers/testing/lib/sim-env:simenv",

    # TODO(WLAN-1171): Remove the pcie dependency.
    "//src/connectivity/wlan/drivers/third_party/intel/iwlwifi:pcie",
    "//zircon/public/lib/ddk",
  ]
}

group("test") {
  testonly = true
  deps = [
    ":iwlwifi_test",
  ]
}

testing_deps = [
  ":iwlwifi_sim_trans_ss",
  "//src/lib/fxl/test:gtest_main",
  "//third_party/googletest:gmock",
]

# The dummy code for developer to start a new test.
executable("dummy_test") {
  output_name = "dummy_test"
  testonly = true

  sources = [
    "dummy_test.cc",
  ]

  deps = testing_deps
}

# Test code for MVM features.
executable("mvm_test") {
  output_name = "mvm_test"
  testonly = true

  sources = [
    "mvm_test.cc",
  ]

  deps = testing_deps
}

executable("pcie_test") {
  output_name = "pcie_test"
  testonly = true

  sources = [
    "pcie_test.cc",
  ]

  deps = testing_deps
}

executable("utils_test") {
  output_name = "utils_test"
  testonly = true

  sources = [
    "utils_test.cc",
  ]

  deps = testing_deps
}

unittest_package("iwlwifi_test") {
  package_name = "iwlwifi_test"

  deps = [
    ":dummy_test",
    ":mvm_test",
    ":pcie_test",
    ":utils_test",
  ]

  tests = [
    {
      name = "dummy_test"
      environments = basic_envs
    },
    {
      name = "mvm_test"
      environments = basic_envs
    },
    {
      name = "pcie_test"
      environments = basic_envs
    },
    {
      name = "utils_test"
      environments = basic_envs
    },
  ]
}
